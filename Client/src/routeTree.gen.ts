/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as SignupIndexImport } from './routes/signup/index'
import { Route as RecordIndexImport } from './routes/record/index'
import { Route as LoginIndexImport } from './routes/login/index'
import { Route as HistoryIndexImport } from './routes/history/index'
import { Route as DashboardIndexImport } from './routes/dashboard/index'
import { Route as HistoryItemImport } from './routes/history/$item'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const SignupIndexRoute = SignupIndexImport.update({
  id: '/signup/',
  path: '/signup/',
  getParentRoute: () => rootRoute,
} as any)

const RecordIndexRoute = RecordIndexImport.update({
  id: '/record/',
  path: '/record/',
  getParentRoute: () => rootRoute,
} as any)

const LoginIndexRoute = LoginIndexImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any)

const HistoryIndexRoute = HistoryIndexImport.update({
  id: '/history/',
  path: '/history/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => rootRoute,
} as any)

const HistoryItemRoute = HistoryItemImport.update({
  id: '/history/$item',
  path: '/history/$item',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/history/$item': {
      id: '/history/$item'
      path: '/history/$item'
      fullPath: '/history/$item'
      preLoaderRoute: typeof HistoryItemImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof rootRoute
    }
    '/history/': {
      id: '/history/'
      path: '/history'
      fullPath: '/history'
      preLoaderRoute: typeof HistoryIndexImport
      parentRoute: typeof rootRoute
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexImport
      parentRoute: typeof rootRoute
    }
    '/record/': {
      id: '/record/'
      path: '/record'
      fullPath: '/record'
      preLoaderRoute: typeof RecordIndexImport
      parentRoute: typeof rootRoute
    }
    '/signup/': {
      id: '/signup/'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/history/$item': typeof HistoryItemRoute
  '/dashboard': typeof DashboardIndexRoute
  '/history': typeof HistoryIndexRoute
  '/login': typeof LoginIndexRoute
  '/record': typeof RecordIndexRoute
  '/signup': typeof SignupIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/history/$item': typeof HistoryItemRoute
  '/dashboard': typeof DashboardIndexRoute
  '/history': typeof HistoryIndexRoute
  '/login': typeof LoginIndexRoute
  '/record': typeof RecordIndexRoute
  '/signup': typeof SignupIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/history/$item': typeof HistoryItemRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/history/': typeof HistoryIndexRoute
  '/login/': typeof LoginIndexRoute
  '/record/': typeof RecordIndexRoute
  '/signup/': typeof SignupIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/history/$item'
    | '/dashboard'
    | '/history'
    | '/login'
    | '/record'
    | '/signup'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/history/$item'
    | '/dashboard'
    | '/history'
    | '/login'
    | '/record'
    | '/signup'
  id:
    | '__root__'
    | '/'
    | '/history/$item'
    | '/dashboard/'
    | '/history/'
    | '/login/'
    | '/record/'
    | '/signup/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  HistoryItemRoute: typeof HistoryItemRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
  HistoryIndexRoute: typeof HistoryIndexRoute
  LoginIndexRoute: typeof LoginIndexRoute
  RecordIndexRoute: typeof RecordIndexRoute
  SignupIndexRoute: typeof SignupIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  HistoryItemRoute: HistoryItemRoute,
  DashboardIndexRoute: DashboardIndexRoute,
  HistoryIndexRoute: HistoryIndexRoute,
  LoginIndexRoute: LoginIndexRoute,
  RecordIndexRoute: RecordIndexRoute,
  SignupIndexRoute: SignupIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/history/$item",
        "/dashboard/",
        "/history/",
        "/login/",
        "/record/",
        "/signup/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/history/$item": {
      "filePath": "history/$item.tsx"
    },
    "/dashboard/": {
      "filePath": "dashboard/index.tsx"
    },
    "/history/": {
      "filePath": "history/index.tsx"
    },
    "/login/": {
      "filePath": "login/index.tsx"
    },
    "/record/": {
      "filePath": "record/index.tsx"
    },
    "/signup/": {
      "filePath": "signup/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
